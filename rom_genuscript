#!/bin/bash
# Файл устанавливает атрибуты (права, владельца, группу) и ссылки согласно файлу с инфой

USAGE() {
	echo "Usage: rom_genuscript <perm_file> <output_file>"
	echo "ENV Options: NO_FORMAT_DATA=1 NO_PRELOAD=1"
	exit 1
}

fail() {
	echo "$1"
    exit 1
}

[ $# -eq 0 ] && USAGE
[ -z "$1" ] && USAGE
[ -z "$2" ] && USAGE
[ ! -f "$1" ] && USAGE

export OUT="$2"

echo "# Generated by GoldRenard Android Kitchen" > "$OUT"

# =======================================================
# FORMATTING SECTION
# =======================================================

echo "ui_print(\"Formatting Devices...\");" >> "$OUT"
echo "ui_print(\"  /system\");" >> "$OUT"
echo "unmount(\"/system\");" >> "$OUT"
echo "format(\"ext4\", \"EMMC\", \"/emmc@android\", \"0\");" >> "$OUT"
echo "ui_print(\"  /cache\");" >> "$OUT"
echo "unmount(\"/cache\");" >> "$OUT"
echo "format(\"ext4\", \"EMMC\", \"/emmc@cache\", \"0\");" >> "$OUT"

if [ "$NO_PRELOAD" != "1" ]; then
	echo "ui_print(\"  /preload\");" >> "$OUT"
	echo "unmount(\"/preload\");" >> "$OUT"
	echo "format(\"ext4\", \"EMMC\", \"/emmc@preload\", \"0\");" >> "$OUT"
fi

if [ "$NO_FORMAT_DATA" != "1" ]; then
	echo "ui_print(\"  /data\");" >> "$OUT"
	echo "unmount(\"/data\");" >> "$OUT"
	echo "format(\"ext4\", \"EMMC\", \"/emmc@usrdata\", \"0\");" >> "$OUT"
fi

# =======================================================
# MOUNTING SECTION
# =======================================================

echo "ui_print(\"Mounting Devices...\");" >> "$OUT"
echo "ui_print(\"  /system\");" >> "$OUT"
echo "mount(\"ext4\", \"EMMC\", \"/emmc@android\", \"/system\");" >> "$OUT"

if [ "$NO_PRELOAD" != "1" ]; then
	echo "ui_print(\"  /preload\");" >> "$OUT"
	echo "mount(\"ext4\", \"EMMC\", \"/emmc@preload\", \"/preload\");" >> "$OUT"
fi

# =======================================================
# COPYING SECTION
# =======================================================

echo "ui_print(\"Installing operating system...\");" >> "$OUT"
echo "ui_print(\"  Copying system files...\");" >> "$OUT"
echo "package_extract_dir(\"system\", \"/system\");" >> "$OUT"
if [ "$NO_PRELOAD" != "1" ]; then
	echo "ui_print(\"  Copying preload files...\");" >> "$OUT"
	echo "package_extract_dir(\"preload\", \"/preload\");" >> "$OUT"
fi

# =======================================================
# SYMLINK/PERMISSION SECTION
# =======================================================

set_perm_recursive() {
	printf "set_perm_recursive($1, $2, $3, $4" >> "$OUT"
	while [ "$5" != "" ]; do
		printf ", \"$5\"" >> "$OUT"
		shift;
	done;
	echo ");" >> "$OUT"
}

set_perm() {
	printf "set_perm($1, $2, $3" >> "$OUT"
	while [ "$4" != "" ]; do
		printf ", \"$4\"" >> "$OUT"
		shift;
	done;
	echo ");" >> "$OUT"
}

symlink() {
	printf "symlink(\"$1\"" >> "$OUT"
	while [ "$2" != "" ]; do
		printf ", \"$2\"" >> "$OUT"
		shift;
	done;
	echo ");" >> "$OUT"
}

export -f set_perm_recursive
export -f set_perm
export -f symlink

echo "ui_print(\"Symlinks and permissions...\");" >> "$OUT"
if [ -f "./$1" ]; then
	./$1
else
	$1
fi

# =======================================================
# INSTALLING ENVIRONMENT
# =======================================================

echo "ui_print(\"Installing environment...\");" >> "$OUT"
echo "package_extract_file(\"boot.img\", \"/dev/bootimg\");" >> "$OUT"
echo "ui_print(\"  Installing U-Boot image...\");" >> "$OUT"
echo "package_extract_file(\"lk.bin\", \"/dev/uboot\");" >> "$OUT"
echo "ui_print(\"  Installing Logo image...\");" >> "$OUT"
echo "package_extract_file(\"logo.bin\", \"/dev/logo\");" >> "$OUT"

echo "unmount(\"/system\");" >> "$OUT"
if [ "$NO_PRELOAD" != "1" ]; then
	echo "unmount(\"/preload\");" >> "$OUT"
fi
echo "ui_print(\"Finished\");" >> "$OUT"